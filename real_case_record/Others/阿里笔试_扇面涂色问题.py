#一个圆分成n个扇形，用m种颜色上色，要求相邻两个颜色不同。求有多少种不同的方法。

# 首先，如果n=1， 则有m 种可能
# 如果 n = 2, 则有 m*(m-1)种可能
# 如果n >=2并且 m <2则毫无可能
# 普通情况：可以想象有 m*(m-1)...(m-1) 种可能，但是注意，因为是圆形，万一最后一个扇形与第一个扇形同色，则也算相邻扇形同色，故
# 不符合题意，所以，要减去这种情况。如何减去？ 可以把这两个扇面当同色时，看成一个扇形，则此时有 n-1 个扇形 在这个圆里，并且这
# n-1 个扇形相邻扇形不同色。设 n个扇形时有 S(n,m) 种可能，则 S(n,m) = m*(m-1)^(n-1) - S(n-1,m) 递推公式就可以得来

def colour(n,m):
    if n == 1:
        return m
    if n >=2 and m < 2:
        return 0
    else:
        if n == 2:
            return m*(m-1)
        else:
            return colour(n-1,m)


print(colour(5,6))
